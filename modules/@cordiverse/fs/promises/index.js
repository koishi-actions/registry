import{Buffer as b}from"https://registry.koishi.chat/modules/buffer/index.js";import F from"https://registry.koishi.chat/modules/process/index.js";import{Buffer as _}from"https://registry.koishi.chat/modules/buffer/index.js";import{O_APPEND as O,O_EXCL as H,parseFlags as M}from"../constants/index.js";import{Dirent as T}from"../index.js";var c=class extends Error{constructor(e,t){super(`${t.code}: ${e}, ${t.syscall} '${t.path}'`)}},l=class extends c{constructor(e,t){super("no such file or directory",{errno:-2,code:"EEXIST",syscall:e,path:t})}},f=class extends c{constructor(e,t){super("file already exists",{errno:-17,code:"EEXIST",syscall:e,path:t})}},d=class extends c{constructor(e,t){super("not a directory",{errno:-20,code:"ENOTDIR",syscall:e,path:t})}},y=class extends c{constructor(e,t){super("illegal operation on a directory",{errno:-21,code:"EISDIR",syscall:e,path:t})}};async function m(r,e,t,n){try{return await t()}catch(a){if(!(a instanceof DOMException))throw a;let i=n[a.code];throw i?new i(r,e):a}}async function p(r,e,t,n){let a=await navigator.storage.getDirectory();for(let i of t)await m(r,e,async()=>{a=await a.getDirectoryHandle(i,{create:n})},{[DOMException.TYPE_MISMATCH_ERR]:d,[DOMException.NOT_FOUND_ERR]:l});return a}async function w(r,e,t=!1){let n=e.split("/").filter(Boolean),a=n.pop();return[await p(r,e,n,t),a]}async function x(r,e,t=!1){let[n,a]=await w(r,e);return m(r,e,()=>n.getFileHandle(a,{create:t}),{[DOMException.TYPE_MISMATCH_ERR]:y,[DOMException.NOT_FOUND_ERR]:l})}async function h(r,e,t,n){let i=await(await x(r,e,!0)).createWritable({keepExistingData:n});typeof t=="string"&&(t=new TextEncoder().encode(t)),await i.write(t),await i.close()}async function C(r,e){await h("write",r,e,!1)}async function I(r,e){await h("append",r,e,!0)}async function E(r,e){let t=await r.getFile();return e==="utf8"||e==="utf-8"?await t.text():_.from(await t.arrayBuffer())}async function W(r,e){let t=await x("read",r);return await E(t,e)}async function $(r,e={}){let t=r.split("/").filter(Boolean),n=await p("readdir",r,t,!1),a=[];for await(let[i,s]of n.entries())a.push(e.withFileTypes?new T(s):i);return a}async function L(r,e={}){if(e.recursive){await p("mkdir",r,r.split("/").filter(Boolean),!0);return}let[t,n]=await w("mkdir",r);try{await t.getDirectoryHandle(n)}catch(a){if(!(a instanceof DOMException))throw a;if(a.code===DOMException.NOT_FOUND_ERR){await t.getDirectoryHandle(n,{create:!0});return}else if(a.code===DOMException.TYPE_MISMATCH_ERR)throw new f("mkdir",r);throw a}throw new f("mkdir",r)}async function k(r,e={}){try{let[t,n]=await w("rm",r);await t.removeEntry(n,{recursive:e.recursive})}catch(t){if(e.force&&t instanceof l)return;throw t}}async function D(r,e,t={}){let n=await o(r),a=await o(e,n.kind);if(n.kind==="file"){let i=await n.getFile().then(g=>g.arrayBuffer()),s=await a.createWritable();await s.write(i),await s.close()}else for await(let i of n.keys())await D(r+"/"+i,e+"/"+i)}async function S(r,e){await D(r,e,{recursive:!0}),await k(r,{recursive:!0})}async function o(r,e){let[t,n]=await w("lstat",r,!!e);if(e==="file")return await t.getFileHandle(n,{create:!0});if(e==="directory")return await t.getDirectoryHandle(n,{create:!0});try{return await t.getFileHandle(n)}catch{return await t.getDirectoryHandle(n)}}async function U(r,e){let t=await o(r);return{isFile:()=>t.kind==="file",isDirectory:()=>t.kind==="directory"}}async function Y(r,e){await o(r)}var u=class{handle;flags;_streamTask;constructor(e,t){this.handle=e,this.flags=t}stream(){return this._streamTask||=this.handle.createWritable({keepExistingData:!!(this.flags&O)})}async readFile(e){return E(this.handle,e)}async write(e,...t){if(typeof e=="string")return{...await this.write(new TextEncoder().encode(e),void 0,void 0,t[1]),buffer:e};let n=t[0]??0,a=t[1]??e.byteLength-n;return e=e.slice(n,n+a),await(await this.stream()).write(e),{bytesWritten:e.byteLength,buffer:e}}async close(){await(await this.stream()).close()}};async function X(r,e,t){if(e=M(e),e&H){try{await o(r)}catch{return new u(await o(r,"file"),e)}throw new f("open",r)}return new u(await o(r,"file"),e)}export{Y as access,I as appendFile,D as copyFile,D as cp,o as getHandle,L as mkdir,X as open,W as readFile,$ as readdir,S as rename,k as rm,k as rmdir,U as stat,k as unlink,C as writeFile};
