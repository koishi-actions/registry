var m=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames;var k=Object.prototype.hasOwnProperty;var l=(e,t)=>()=>(e&&(t=e(e=0)),t);var z=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var f=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of P(t))!k.call(e,a)&&a!==r&&m(e,a,{get:()=>t[a],enumerable:!(o=j(t,a))||o.enumerable});return e},u=(e,t,r)=>(f(e,t,"default"),r&&f(r,t,"default"));var H=e=>f(m({},"__esModule",{value:!0}),e);import{Buffer as _}from"https://registry.koishi.chat/modules/buffer/index.js";import b from"https://registry.koishi.chat/modules/process/index.js";var i=l(()=>{});var s={};import*as T from"https://registry.koishi.chat/modules/koishi/index.js";var y=l(()=>{i();u(s,T)});var Z=z((W,x)=>{i();var c=Object.defineProperty,U=Object.getOwnPropertyDescriptor,C=Object.getOwnPropertyNames,S=Object.prototype.hasOwnProperty,h=(e,t)=>c(e,"name",{value:t,configurable:!0}),A=(e,t)=>{for(var r in t)c(e,r,{get:t[r],enumerable:!0})},B=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of C(t))!S.call(e,a)&&a!==r&&c(e,a,{get:()=>t[a],enumerable:!(o=U(t,a))||o.enumerable});return e},N=e=>B(c({},"__esModule",{value:!0}),e),v={};A(v,{Config:()=>V,apply:()=>d,name:()=>D,usage:()=>E});x.exports=N(v);var p=(y(),H(s)),D="github-og",E=`
## 响应的消息格式
* koishijs/koishi
* https://github.com/koishijs/koishi
`,V=p.Schema.object({});async function g(e){let t=new TextEncoder().encode(e),r=await crypto.subtle.digest("SHA-256",t);return p.Binary.toHex(r)}h(g,"digest");function w(e){return new RegExp("^(?:(?:(?:https?):)?\\/\\/)(?:(?:(?:[a-z0-9\\u00a1-\\uffff][a-z0-9\\u00a1-\\uffff_-]{0,62})?[a-z0-9\\u00a1-\\uffff]\\.)+(?:[a-z\\u00a1-\\uffff]{2,}\\.?))(?:[/?#]\\S*)?$","i").test(e)}h(w,"isValidHttpUrl");function d(e){e.on("message-created",async t=>{let r=p.h.select(t.elements,"text").join("").trim();if(r.startsWith("https://github.com/")&&w(r)){let o=r.split("/"),a=o[3],n=o[4];if(a&&n){let O=`https://github.com/${a}/${n}`,$=await g(O);await t.send(p.h.img(`https://opengraph.githubassets.com/${$}/${a}/${n}`))}return}if(/^[A-Za-z0-9_-]+\/[A-Za-z0-9_.-]+$/.test(r)){let o=r.split("/");if(Number.isInteger(+o[0]))return;let a=`https://github.com/${r}`,n=await g(a);return await t.send(p.h.img(`https://opengraph.githubassets.com/${n}/${r}`))}})}h(d,"apply")});export default Z();
