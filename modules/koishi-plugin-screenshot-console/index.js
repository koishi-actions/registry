var $=Object.defineProperty;var U=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var B=Object.prototype.hasOwnProperty;var b=(t,e)=>()=>(t&&(e=t(t=0)),e);var L=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var y=(t,e,o,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of j(e))!B.call(t,n)&&n!==o&&$(t,n,{get:()=>e[n],enumerable:!(i=U(e,n))||i.enumerable});return t},f=(t,e,o)=>(y(t,e,"default"),o&&y(o,e,"default"));var V=t=>y($({},"__esModule",{value:!0}),t);import{Buffer as S}from"https://registry.koishi.chat/modules/buffer/index.js";import _ from"https://registry.koishi.chat/modules/process/index.js";var w=b(()=>{});var g={};import*as R from"https://registry.koishi.chat/modules/koishi/index.js";var I=b(()=>{w();f(g,R)});var C=L(c=>{w();Object.defineProperty(c,"__esModule",{value:!0});c.apply=c.Config=c.usage=c.inject=c.name=void 0;var a=(I(),V(g));c.name="screenshot-console";c.inject=["puppeteer","database","server"];c.usage=`
<p>指令「插件市场搜索」支持多关键词搜索。例如，输入的指令：</p>
<p><code>插件市场搜索 按下载量 email:1919892171@qq.com</code></p>
`;c.Config=a.Schema.intersect([a.Schema.object({accessPort:a.Schema.union([a.Schema.const(0).description("自动检测"),a.Schema.natural().description("自定义").default(5140)]).description("访问的控制台端口").default(0),searchMappings:a.Schema.array(a.Schema.object({key:a.Schema.string().description("需转换"),value:a.Schema.string().description("转换后")})).role("table").description("「插件市场搜索」关键词映射").default([{key:"综合",value:"sort:default"},{key:"按评分",value:"sort:rating"},{key:"按下载量",value:"sort:download"},{key:"按创建时间",value:"sort:created"},{key:"按更新时间",value:"sort:updated"},{key:"近期新增",value:"created:>{seven_days_ago}"}]),enableViewLog:a.Schema.boolean().description("是否启用「查看最近日志」指令").default(!1),autoLogin:a.Schema.boolean().description("是否在 auth 开启时自动登录").default(!1)}),a.Schema.union([a.Schema.object({autoLogin:a.Schema.const(!0).required(),loginUsername:a.Schema.string().description("登录用户名").default("admin"),loginPassword:a.Schema.string().role("secret").description("登录密码").default("")}),a.Schema.object({})])]);function q(t,e){t.model.extend("screenshot_console_bind",{id:"string",email:"string"}),t.command("market-search <keyword:text>","插件市场截图").alias("插件市场搜索").action(async({session:o},i)=>{let n=a.h.select(i||"","text, at");if(n.length===0)return"请输入搜索关键词。";let p=[];for(let r of n){if(r.type==="at"){let l=await t.database.get("screenshot_console_bind",{id:`${o.platform}:${o.guildId}:${r.attrs.id}`});if(l.length===0)continue;p.push("email:"+l[0].email);continue}p.push(...r.attrs.content.split(" "))}let d=[];for(let r of p){if(!r)continue;let l=e.searchMappings.find(h=>h.key===r)?.value;if(l?.includes?.("{seven_days_ago}")){let h=new Date;h.setDate(h.getDate()-7);let P=l.replaceAll("{seven_days_ago}",h.toISOString());d.push(encodeURIComponent(P))}else d.push(encodeURIComponent(l??r))}let u=e.accessPort||t.server.port;if(!u)return"搜索失败。";let s=await t.puppeteer.page(),k=`http://127.0.0.1:${u}/market?keyword=${d.join("+")}`;if(await s.goto(k,{waitUntil:"networkidle2"}),e.autoLogin&&s.url()===`http://127.0.0.1:${u}/login`){let[r,l]=await s.$$("div.login-form input");await r.type(e.loginUsername),await l.type(e.loginPassword),await Promise.all([s.waitForNavigation({timeout:1500}),s.click("div.login-form button:nth-child(2)")]),await s.goto(k,{waitUntil:"networkidle2"})}await s.addStyleTag({content:`
          .layout-status {
            display: none;
          }
          div.package-list {
            padding: 7px;
            max-width: 736px;
          }
          a.market-package button {
            display: none;
          }
          div.package-list a:nth-child(n + 7) {
            display: none;
          }
          div.search-box {
            display: none !important;
          }
        `});let v=await s.$("div.package-list"),m;if(v){let r=await s.$$("a.market-package");if(r.length===1){let l=await r[0].screenshot({});m=a.h.image(l,"image/png")}else{let l=await v.screenshot({captureBeyondViewport:!1});m=a.h.image(l,"image/png")}}else await s.$("div.k-empty")?m="没有搜索到相关插件。":await s.$("div.market-error")?m="无法连接到插件市场。":m="搜索失败。";return s.close(),m}),t.command("market-search.bind <target:user> <email:string>","将用户与邮箱绑定").alias("插件市场绑定邮箱").action(async({session:o},i,n)=>{if(!i)return"未指定用户。";if(!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(n))return"邮箱格式不正确，请确保邮箱地址包含@符号。";let p=i.replace(o.platform+":","");return await t.database.upsert("screenshot_console_bind",[{id:`${o.platform}:${o.guildId}:${p}`,email:n}],"id"),"邮箱绑定成功！"}),e.enableViewLog&&t.command("view-log","查看最近日志").alias("查看最近日志").action(async()=>{let o=e.accessPort||t.server.port;if(!o)return"日志获取失败。";let i=await t.puppeteer.page();await i.setViewport({width:1125,height:768});let n=`http://127.0.0.1:${o}/logs`;if(await i.goto(n,{waitUntil:"networkidle2"}),e.autoLogin&&i.url()===`http://127.0.0.1:${o}/login`){let[u,s]=await i.$$("div.login-form input");await u.type(e.loginUsername),await s.type(e.loginPassword),await Promise.all([i.waitForNavigation({timeout:2e3}),i.click("div.login-form button:nth-child(2)")]),await i.goto(n,{waitUntil:"networkidle2"})}let p=await i.$("div.log-list"),d;if(p){let u=await p.screenshot({captureBeyondViewport:!1});d=a.h.image(u,"image/png")}else d="日志获取失败。";return i.close(),d})}c.apply=q});export default C();
