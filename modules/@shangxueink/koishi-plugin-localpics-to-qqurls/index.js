var B=Object.defineProperty;var Z=Object.getOwnPropertyDescriptor;var ee=Object.getOwnPropertyNames;var te=Object.prototype.hasOwnProperty;var w=(t,e)=>()=>(t&&(e=t(t=0)),e);var N=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var $=(t,e,p,f)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of ee(e))!te.call(t,a)&&a!==p&&B(t,a,{get:()=>e[a],enumerable:!(f=Z(e,a))||f.enumerable});return t},r=(t,e,p)=>($(t,e,"default"),p&&$(p,e,"default"));var Q=t=>$(B({},"__esModule",{value:!0}),t);import{Buffer as m}from"https://registry.koishi.chat/modules/buffer/index.js";import d from"https://registry.koishi.chat/modules/process/index.js";var s=w(()=>{});var _={};import*as de from"https://registry.koishi.chat/modules/@cordiverse/fs/index.js";var E=w(()=>{s();r(_,de)});var S={};import*as ue from"https://registry.koishi.chat/modules/@cordiverse/url/index.js";var z=w(()=>{s();r(S,ue)});var I={};import*as Se from"https://registry.koishi.chat/modules/koishi/index.js";var H=w(()=>{s();r(I,Se)});import oe from"https://registry.koishi.chat/modules/@cordiverse/path/index.js";var O=N((ge,K)=>{s();K.exports=oe});import re from"https://registry.koishi.chat/modules/crypto-browserify/index.js";var W=N((be,M)=>{s();M.exports=re});var g={};import*as Ce from"https://registry.koishi.chat/modules/@cordiverse/fs/promises/index.js";var X=w(()=>{s();r(g,Ce)});var ne=N(l=>{s();Object.defineProperty(l,"__esModule",{value:!0});l.apply=l.Config=l.usage=l.inject=l.name=void 0;var j=(E(),Q(_)),se=(z(),Q(S)),i=(H(),Q(I)),T=O(),J=O(),ie=W(),C=(X(),Q(g)),c=new i.Logger("localpics-to-qqurls");l.name="localpics-to-qqurls";l.usage=`
<!DOCTYPE html>
<html>
<head>
    <title>localpics-to-qqurls 插件使用说明</title>
</head>
<body>
    <h1>localpics-to-qqurls 插件使用说明</h1>
    <p>本插件旨在将一个图包文件夹，通过QQ官方机器人上传至QQ频道（文字子频道），并获取返回的链接，从而实现频道图床功能。</p>
    <p>请注意，这里的图包文件夹必须放在 Koishi 实例的 <code>data</code> 文件夹下，以便本插件的 <code>local_PICS_files</code> 配置项能够找到并选择该文件夹。</p>
    <p>本插件适合QQ官方机器人使用。</p>    
    <p>官方机器人安装本插件，用以记录每次上传得到的 URL。</p>
</body>
</html>
`;l.Config=i.Schema.intersect([i.Schema.object({appId:i.Schema.string().description("机器人appId"),secret:i.Schema.string().description("机器人secret"),QQchannelId:i.Schema.string().description("`填入QQ频道的频道ID`，将该ID的频道作为中转频道 <br> 频道ID可以用[inspect插件来查看](/market?keyword=inspect) `频道ID应为纯数字`").experimental().pattern(/^\S+$/)}).description("QQ官方bot设置"),i.Schema.object({local_PICS_files:i.Schema.path({filters:["directory"]}).description("需要转换的图片文件夹 `文件夹内需要至少有一张图哦`").required(),Start_End_point:i.Schema.tuple([Number,Number]).default([0,0]).description("需要上传的json始末ID。正整数有效。`无效则代表全部id`"),reClear_JSON:i.Schema.boolean().default(!1).description("对json内的每个本地图都上传`关闭后仅对 没有webURL 的上传`"),Clear_JSON_on_every_restart:i.Schema.boolean().default(!1).description("每次重启都恢复默认json`会清空记录的URL哦`")}).description("本地文件夹设置"),i.Schema.object({maxRetries:i.Schema.number().role("slider").min(0).max(10).step(1).description("上传失败的重试次数").default(5).experimental(),consoleinfo:i.Schema.boolean().default(!1).description("日志调试模式`日常使用无需开启`")}).description("调试设置")]);async function ae(t,e){let p=J.join(t.baseDir,"data","localpics_to_qqurls");j.existsSync(p)||j.mkdirSync(p,{recursive:!0});let f=J.join(t.baseDir,e.local_PICS_files),a=J.join(t.baseDir,e.local_PICS_files,"qq_local_to_web_url.json");if(e.consoleinfo&&(c.info("rootpath: "+p),c.info("config.local_PICS_files: "+e.local_PICS_files),c.info("rootpath_PICS_files: "+f),c.info("rootpath_json: "+a)),!j.existsSync(f)||!j.lstatSync(f).isDirectory()){c.error("图片文件夹路径无效。");return}let v=(await C.readdir(f)).filter(o=>o.endsWith(".jpg")).sort();if(v.length===0){c.error("图片文件夹内没有图片。");return}let h;e.Clear_JSON_on_every_restart||!j.existsSync(a)?(h=v.map((o,n)=>({id:(n+1).toString(),localURL:`file://${T.join(f,o).replace(/\\/g,"/")}`,webURL:""})),await C.writeFile(a,JSON.stringify(h,null,4),"utf-8"),c.info("json已生成于 "+a)):h=JSON.parse(await C.readFile(a,"utf-8"));let y,[L,k]=e.Start_End_point;e.reClear_JSON?y=h:y=h.filter(o=>!o.webURL),L>0&&k>0&&L<k&&(y=y.filter(o=>{let n=parseInt(o.id,10);return n>=L&&n<=k}));let D=[],x=!1;t.on("message",async o=>{if(D.push(async()=>{for(let n of y){let u=0,q=e.maxRetries;for(;u<q;)try{let b=await Y(n.localURL);n.webURL=b.url,await C.writeFile(a,JSON.stringify(h,null,4),"utf-8");break}catch(b){u++,c.error(`转换失败 文件名: ${T.basename(n.localURL)} 错误信息: ${b.message} 尝试次数: ${u}`),u>=q&&c.error(`已达到最大重试次数，跳过 文件名: ${T.basename(n.localURL)}`)}}}),!x){for(x=!0;D.length>0;)await D.shift()();x=!1}});async function Y(o){let n=e.appId,u=e.secret,q=e.QQchannelId,b=e.consoleinfo;async function F(U){let{access_token:G,expires_in:V}=await t.http.post("https://bots.qq.com/app/getAppAccessToken",{appId:U.appId,clientSecret:U.secret});U.token=G,t.setTimeout(()=>F(U),(V-30)*1e3)}let R={appId:n,secret:u,channelId:q};await F(R),typeof o=="string"&&(new URL(o).protocol==="file:"?o=await C.readFile(se.fileURLToPath(o)):(o=await t.http.get(o,{responseType:"arraybuffer"}),o=m.from(o)));let P=new FormData;P.append("msg_id","0"),P.append("file_image",new Blob([o],{type:"image/png"}),"image.jpg"),await t.http.post(`https://api.sgroup.qq.com/channels/${R.channelId}/messages`,P,{headers:{Authorization:`QQBot ${R.token}`,"X-Union-Appid":R.appId}});let A=ie.createHash("md5").update(o).digest("hex").toUpperCase();return q!==void 0&&b&&c.info(`转换URL成功： https://gchat.qpic.cn/qmeetpic/0/0-0-${A}/0`),{url:`https://gchat.qpic.cn/qmeetpic/0/0-0-${A}/0`}}}l.apply=ae});export default ne();
