var re=Object.create;var _=Object.defineProperty;var oe=Object.getOwnPropertyDescriptor;var le=Object.getOwnPropertyNames;var ce=Object.getPrototypeOf,ue=Object.prototype.hasOwnProperty;var $=(s,e)=>()=>(s&&(e=s(s=0)),e);var z=(s,e)=>()=>(e||s((e={exports:{}}).exports,e),e.exports),de=(s,e)=>{for(var t in e)_(s,t,{get:e[t],enumerable:!0})},G=(s,e,t,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of le(e))!ue.call(s,n)&&n!==t&&_(s,n,{get:()=>e[n],enumerable:!(i=oe(e,n))||i.enumerable});return s},m=(s,e,t)=>(G(s,e,"default"),t&&G(t,e,"default")),H=(s,e,t)=>(t=s!=null?re(ce(s)):{},G(e||!s||!s.__esModule?_(t,"default",{value:s,enumerable:!0}):t,s)),P=s=>G(_({},"__esModule",{value:!0}),s);import{Buffer as w}from"https://registry.koishi.chat/modules/buffer/index.js";import C from"https://registry.koishi.chat/modules/process/index.js";var f=$(()=>{});var p={};import*as Ae from"https://registry.koishi.chat/modules/@satorijs/core/index.js";var S=$(()=>{f();m(p,Ae)});import me from"https://registry.koishi.chat/modules/crypto-browserify/index.js";var F=z((Me,J)=>{f();J.exports=me});var N=z((qe,ne)=>{f();var pe=Object.create,y=Object.defineProperty,fe=Object.getOwnPropertyDescriptor,he=Object.getOwnPropertyNames,ve=Object.getPrototypeOf,Te=Object.prototype.hasOwnProperty,c=(s,e)=>y(s,"name",{value:e,configurable:!0}),ge=(s,e)=>{for(var t in e)y(s,t,{get:e[t],enumerable:!0})},K=(s,e,t,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of he(e))!Te.call(s,n)&&n!==t&&y(s,n,{get:()=>e[n],enumerable:!(i=fe(e,n))||i.enumerable});return s},Se=(s,e,t)=>(t=s!=null?pe(ve(s)):{},K(e||!s||!s.__esModule?y(t,"default",{value:s,enumerable:!0}):t,s)),Pe=s=>K(y({},"__esModule",{value:!0}),s),V={};ge(V,{HttpServer:()=>E,Internal:()=>r,SlackBot:()=>I,SlackMessageEncoder:()=>Q,Token:()=>te,WsClient:()=>b,adaptMessage:()=>T,adaptMessageDeleted:()=>j,adaptSentAsset:()=>x,adaptSession:()=>A,decodeChannel:()=>D,decodeGuild:()=>se,decodeGuildMember:()=>U,decodeUser:()=>B,default:()=>ye,escape:()=>X,unescape:()=>Z});ne.exports=Pe(V);var h=(S(),P(p)),O=(S(),P(p)),o=(S(),P(p)),Oe=(S(),P(p)),X=c(s=>s.replace(/(?<!\u200b)[\*_~`]/g,"​$&").replace(/@everyone/g,()=>"@​everyone").replace(/@here/g,()=>"@​here").replace(/(?<!\u200b)^>/g," &gt;").replace(/<(.*?)>/g,"&lt;$1&gt;"),"escape"),Z=c(s=>s.replace(/\u200b([\*_~`])/g,"$1").replace(/@\u200Beveryone/g,()=>"@everyone").replace(/@\u200Bhere/g,()=>"@here"),"unescape"),Q=class extends Oe.MessageEncoder{static{c(this,"SlackMessageEncoder")}buffer="";thread_ts=null;elements=[];addition={};async flush(){if(!this.buffer.length)return;let s=await this.bot.internal.chatPostMessage(this.bot.config.botToken,{channel:this.channelId,...this.addition,thread_ts:this.thread_ts,text:this.buffer});if(!s.ok)throw new Error(s.error);let e=this.bot.session();await T(this.bot,s.message,e.event.message={},e.event),e.channelId=this.channelId,e.app.emit(e,"send",e),this.results.push(e.event.message),this.buffer=""}async sendAsset(s){this.buffer.length&&await this.flush();let{attrs:e}=s,{filename:t,data:i,type:n}=await this.bot.ctx.http.file(e.src||e.url,e),l=new FormData,a=new Blob([i],{type:n});l.append("file",a,e.file||t),l.append("channels",this.channelId),this.thread_ts&&l.append("thread_ts",this.thread_ts);let u=await this.bot.request("POST","/files.upload",l);if(u.ok){let d=this.bot.session();x(u.file,d),d.app.emit(d,"send",d),this.results.push(d.event.message)}}async visit(s){let{type:e,attrs:t,children:i}=s;e==="text"?this.buffer+=X(t.content):(e==="img"||e==="image")&&(t.src||t.url)?await this.sendAsset(s):e==="sharp"&&t.id?this.buffer+=`<#${t.id}>`:e==="at"?(t.id&&(this.buffer+=`<@${t.id}>`),t.type==="all"&&(this.buffer+="<!everyone>"),t.type==="here"&&(this.buffer+="<!here>")):e==="b"||e==="strong"?(this.buffer+="*",await this.render(i),this.buffer+="*"):e==="i"||e==="em"?(this.buffer+="_",await this.render(i),this.buffer+="_"):e==="s"||e==="del"?(this.buffer+="~",await this.render(i),this.buffer+="~"):e==="code"?(this.buffer+="`",await this.render(i),this.buffer+="`"):e==="a"?(this.buffer+=`<${t.href}|`,await this.render(i),this.buffer+=">"):e==="quote"?this.thread_ts=t.id:e==="br"?this.buffer+=`
`:e==="p"?(this.buffer.endsWith(`
`)||(this.buffer+=`
`),await this.render(i),this.buffer.endsWith(`
`)||(this.buffer+=`
`)):e==="face"?this.buffer+=`:${t.id}:`:e==="author"?this.addition={username:t.nickname,icon_url:t.avatar}:e==="message"&&await this.render(i)}};function L(s){let e=[];for(let t of s)if(t.type==="text"){let i=o.h.text(Z(t.text));t.style?.bold&&(i=(0,o.h)("b",{},i)),t.style?.italic&&(i=(0,o.h)("i",{},i)),t.style?.strike&&(i=(0,o.h)("del",{},i)),t.style?.code&&(i=(0,o.h)("code",{},i)),e.push(i)}else t.type==="link"?e.push((0,o.h)("a",{href:t.url},t.text)):t.type==="emoji"?e.push(o.h.text(String.fromCodePoint(...t.unicode.split("-").map(i=>parseInt(i,16))))):t.type==="user"?e.push(o.h.at(t.user_id)):t.type==="broadcast"&&e.push((0,o.h)("at",{type:t.range}));return e}c(L,"adaptRichText");function Y(s){let e=s.split(/(<(?:.*?)>)/g);e=e.map(i=>i.split(/(:(?:[a-zA-Z0-9_]+):)/g)).flat();let t=[];for(let i of e){if(!i)continue;let n=i.match(/<(.*?)>/);n?(n[0].startsWith("@U")&&t.push(o.h.at(n[0].slice(2))),n[0].startsWith("#C")&&t.push(o.h.sharp(n[0].slice(2)))):i.startsWith(":")&&i.endsWith(":")?t.push((0,o.h)("face",{id:i.slice(1,-1)})):t.push(o.h.text(i))}return t}c(Y,"adaptMarkdown");function ee(s){let e=[];for(let t of s)if(t.type==="rich_text")for(let i of t.elements)i.type==="rich_text_section"?e=e.concat(L(i.elements)):i.type==="rich_text_list"&&e.push((0,o.h)(i.style==="bullet"?"ul":"ol",{},i.elements.map(n=>(0,o.h)("li",{},L(n.elements)))));else t.type==="section"&&(e=e.concat(Y(t.text.text)));return e}c(ee,"adaptMessageBlocks");var be=c(s=>({id:s.app_id,name:s.name,isBot:!0,avatar:s.icons.image_72}),"decodeBotProfile");async function T(s,e,t,i=t){let n=ee(e.blocks);for(let a of e.files??[])a.mimetype.startsWith("video/")?n.push(o.h.video(a.url_private,{id:a.id})):a.mimetype.startsWith("audio/")?n.push(o.h.video(a.url_private,{id:a.id})):a.mimetype.startsWith("image/")?n.push(o.h.image(a.url_private,{id:a.id})):n.push(o.h.file(a.url_private,{id:a.id}));let l=null;for(let a of e.attachments??[])a.is_msg_unfurl&&(l=a.ts);t.id=t.messageId=e.ts,t.elements=l?[(0,o.h)("message",{forward:!0,id:l},n)]:n,t.content=t.elements.join(""),i&&(i.timestamp=Math.floor(Number(e.ts)*1e3),"channel"in e&&(i.channel={id:e.channel,type:e.channel_type==="im"?o.Universal.Channel.Type.DIRECT:o.Universal.Channel.Type.TEXT}),"bot_profile"in e?i.user=be(e.bot_profile):i.user={id:e.user},e.thread_ts&&e.thread_ts!==e.ts&&(t.quote=await s.getMessage(i.channel.id,e.thread_ts)),e.team&&(i.guild={id:e.team}))}c(T,"adaptMessage");function j(s,e,t){t.isDirect=e.channel_type==="im",t.channelId=e.channel,t.guildId=e.previous_message.team,t.type="message-deleted",t.messageId=e.previous_message.ts,t.timestamp=Math.floor(Number(e.previous_message.ts)*1e3),T(s,e.previous_message,t.event.message={},t.event)}c(j,"adaptMessageDeleted");function x(s,e){e.messageId=s.shares.public[Object.keys(s.shares.public)[0]][0].ts,e.timestamp=s.created*1e3,e.elements=[o.h.image(s.url_private,{id:s.id})],e.content=e.elements.join(""),e.channelId=s.channels[0],e.type="message",e.userId=s.user}c(x,"adaptSentAsset");function q(s,e){s.guildId=e.team_id,s.channelId=e.event.item.channel,s.messageId=e.event.item.ts,s.timestamp=Math.floor(Number(e.event.item.ts)*1e3),s.userId=e.event.user,s.content=e.event.reaction}c(q,"setupReaction");async function A(s,e){let t=s.session();if(e.event.type==="message"){let i=e.event;if(i.user===s.selfId)return;if(!i.subtype)t.type="message",await T(s,i,t.event.message={},t.event);else if(i.subtype==="message_deleted")j(s,i,t);else if(i.subtype==="message_changed"){let n=i;if(n.message.subtype==="thread_broadcast")return;t.type="message-updated",t.guildId=e.team_id,await T(s,n.message,t.event.message={},t.event)}else return}else if(e.event.type==="channel_left")t.type="channel-removed",t.channelId=e.event.channel,t.timestamp=Math.floor(Number(e.event.event_ts)*1e3),t.guildId=e.team_id;else if(e.event.type==="reaction_added")t.type="reaction-added",q(t,e);else if(e.event.type==="reaction_removed")t.type="reaction-deleted",q(t,e);else return;return t}c(A,"adaptSession");var B=c(s=>({id:s.id,name:s.real_name,nickname:s.profile.display_name,userId:s.id,avatar:s.profile.image_512??s.profile.image_192??s.profile.image_72??s.profile.image_48??s.profile.image_32??s.profile.image_24,username:s.real_name,isBot:s.is_bot}),"decodeUser"),U=c(s=>({user:B(s)}),"decodeGuildMember"),D=c(s=>({id:s.id,name:s.name,type:s.is_private?o.Universal.Channel.Type.DIRECT:o.Universal.Channel.Type.TEXT}),"decodeChannel"),se=c(s=>({id:s.id,name:s.name}),"decodeGuild"),b=class extends O.Adapter.WsClient{static{c(this,"WsClient")}async prepare(){await this.bot.getLogin();let s=await this.bot.request("POST","/apps.connections.open",{},{},!0),{url:e}=s;return this.bot.logger.debug("ws url: %s",e),this.bot.ctx.http.ws(e)}async accept(){this.socket.addEventListener("message",async({data:s})=>{let e=JSON.parse(s.toString());this.bot.logger.debug(e);let{type:t}=e;if(t==="hello")return this.bot.online();if(t==="events_api"){let{envelope_id:i}=e,n=e.payload;this.socket.send(JSON.stringify({envelope_id:i}));let l=await A(this.bot,n);l&&(this.bot.dispatch(l),this.bot.logger.debug(l))}})}};(s=>{s.Options=O.Schema.intersect([O.Schema.object({protocol:O.Schema.const("ws").required(!1)}),O.Adapter.WsClientConfig])})(b||(b={}));var k=(S(),P(p)),Ee=Se(F(),1),E=class extends k.Adapter{static{c(this,"HttpServer")}static inject=["server"];async connect(s){let{signing:e}=s.config;await s.getLogin(),this.ctx.server.post("/slack",async t=>{let i=t.request.header["x-slack-request-timestamp"].toString(),n=t.request.header["x-slack-signature"].toString(),l=t.request.body[Symbol.for("unparsedBody")],a=Ee.default.createHmac("sha256",e),[u,d]=n.split("="),R=Math.floor(Date.now()/1e3)-60*5;if(Number(i)<R||(a.update(`${u}:${i}:${l}`),d!==a.digest("hex")))return t.status=403;let{type:v}=t.request.body;if(v==="url_verification")return t.status=200,t.body={challenge:t.request.body.challenge};if(v==="event_callback"){t.status=200,t.body="ok";let W=t.request.body;s.logger.debug(W);let M=await A(s,W);s.logger.debug(M),M&&s.dispatch(M)}})}};(s=>{s.Options=k.Schema.object({protocol:k.Schema.const("http").required(),signing:k.Schema.string().required()})})(E||(E={}));var te=(s=>(s[s.BOT=0]="BOT",s[s.APP=1]="APP",s))(te||{}),r=class ie{constructor(e,t){this.bot=e,this.http=t}static{c(this,"Internal")}static define(e){for(let t in e)for(let i in e[t]){let n=i;for(let l of Object.keys(e[t][n]))ie.prototype[l]=async function(...a){let u={headers:{}},d="";typeof a[0]=="string"?d=a[0]:d=a[0]===0?this.bot.config.botToken:this.bot.config.token,u.headers.Authorization=`Bearer ${d}`;let R=e[t][n][l];n==="GET"?u.params=a[1]:R&&!(a[1]instanceof FormData)?(u.headers["content-type"]="application/json; charset=utf-8",u.data=JSON.stringify(a[1])):(u.headers["content-type"]="application/x-www-form-urlencoded",u.data=a[1]);try{return(await this.http(n,t,u)).data}catch(v){throw!this.http.isError(v)||!v.response?v:new Error(`[${v.response.status}] ${JSON.stringify(v.response.data)}`)}}}}},I=class extends h.Bot{static{c(this,"SlackBot")}static MessageEncoder=Q;static inject=["http"];http;internal;constructor(s,e){super(s,e,"slack"),this.http=s.http.extend(e),this.internal=new r(this,this.http),e.protocol==="ws"?s.plugin(b,this):s.plugin(E,this)}async request(s,e,t={},i={},n=!1){return i.Authorization=`Bearer ${n?this.config.token:this.config.botToken}`,s==="GET"?await this.http.get(e,{params:t,headers:i}):(await this.http(s,e,{data:t,headers:i})).data}async getLogin(){let s=await this.internal.authTest(0);return this.user={id:s.user_id,name:s.user,userId:s.user_id,avatar:null,username:s.user,isBot:!!s.bot_id},this.toJSON()}async deleteMessage(s,e){await this.internal.chatDelete(0,{channel:s,ts:Number(e)})}async getMessage(s,e){let{messages:[t]}=await this.internal.conversationsHistory(0,{channel:s,oldest:Number(e),limit:1,inclusive:!0});if(!t)return;let i={};return await T(this,t,i,i),i}async getMessageList(s,e){let{messages:t}=await this.request("POST","/conversations.history",{channel:s,latest:e}),i=await Promise.all(t.map(async n=>{let l={};return await T(this,n,l,l),l}));return{data:i,next:i[0]?.id}}async getUser(s,e){let{user:t}=await this.request("POST","/users.info",{user:s});return B(t)}async getGuildMemberList(s){let{members:e}=await this.request("POST","/users.list");return{data:e.map(U)}}async getChannel(s,e){let{channel:t}=await this.request("POST","/conversations.info",{channel:s});return D(t)}async getChannelList(s){let{channels:e}=await this.request("POST","/conversations.list",{team_id:s});return{data:e.map(D)}}async getGuild(s){let{team:e}=await this.request("POST","/team.info",{team_id:s});return se(e)}async getGuildList(){return{data:[await this.getGuild()]}}async getGuildMember(s,e){let{user:t}=await this.request("POST","/users.info",{user:e});return U(t)}async createDirectChannel(s){let{channel:e}=await this.internal.conversationsOpen(0,{users:s});return{id:e.id,type:h.Universal.Channel.Type.DIRECT}}async getReactions(s,e,t){let{message:i}=await this.internal.reactionsGet(0,{channel:s,timestamp:e,full:!0});return i.reactions.find(n=>n.name===t)?.users.map(n=>({userId:n}))??[]}async createReaction(s,e,t){await this.internal.reactionsAdd(0,{channel:s,timestamp:e,name:t})}async clearReaction(s,e,t){let{message:i}=await this.internal.reactionsGet(0,{channel:s,timestamp:e,full:!0});for(let n of i.reactions)(!t||n.name===t)&&await this.internal.reactionsRemove(0,{channel:s,timestamp:e,name:n.name})}};(s=>{s.Config=h.Schema.intersect([h.Schema.object({protocol:h.Schema.union(["http","ws"]).description("选择要使用的协议。").required(),token:h.Schema.string().description("App-Level Token.").role("secret").required(),botToken:h.Schema.string().description("OAuth Token.").role("secret").required()}),h.Schema.union([b.Options,E.Options]),h.HTTP.createConfig("https://slack.com/api/")])})(I||(I={}));r.define({"/admin.apps.approve":{POST:{adminAppsApprove:!0}},"/admin.apps.approved.list":{GET:{adminAppsApprovedList:!1}},"/admin.apps.requests.list":{GET:{adminAppsRequestsList:!1}},"/admin.apps.restrict":{POST:{adminAppsRestrict:!0}},"/admin.apps.restricted.list":{GET:{adminAppsRestrictedList:!1}},"/admin.conversations.archive":{POST:{adminConversationsArchive:!0}},"/admin.conversations.convertToPrivate":{POST:{adminConversationsConvertToPrivate:!0}},"/admin.conversations.create":{POST:{adminConversationsCreate:!0}},"/admin.conversations.delete":{POST:{adminConversationsDelete:!0}},"/admin.conversations.disconnectShared":{POST:{adminConversationsDisconnectShared:!0}},"/admin.conversations.ekm.listOriginalConnectedChannelInfo":{GET:{adminConversationsEkmListOriginalConnectedChannelInfo:!1}},"/admin.conversations.getConversationPrefs":{GET:{adminConversationsGetConversationPrefs:!0}},"/admin.conversations.getTeams":{GET:{adminConversationsGetTeams:!0}},"/admin.conversations.invite":{POST:{adminConversationsInvite:!0}},"/admin.conversations.rename":{POST:{adminConversationsRename:!0}},"/admin.conversations.restrictAccess.addGroup":{POST:{adminConversationsRestrictAccessAddGroup:!1}},"/admin.conversations.restrictAccess.listGroups":{GET:{adminConversationsRestrictAccessListGroups:!1}},"/admin.conversations.restrictAccess.removeGroup":{POST:{adminConversationsRestrictAccessRemoveGroup:!1}},"/admin.conversations.search":{GET:{adminConversationsSearch:!0}},"/admin.conversations.setConversationPrefs":{POST:{adminConversationsSetConversationPrefs:!0}},"/admin.conversations.setTeams":{POST:{adminConversationsSetTeams:!0}},"/admin.conversations.unarchive":{POST:{adminConversationsUnarchive:!0}},"/admin.emoji.add":{POST:{adminEmojiAdd:!1}},"/admin.emoji.addAlias":{POST:{adminEmojiAddAlias:!1}},"/admin.emoji.list":{GET:{adminEmojiList:!1}},"/admin.emoji.remove":{POST:{adminEmojiRemove:!1}},"/admin.emoji.rename":{POST:{adminEmojiRename:!1}},"/admin.inviteRequests.approve":{POST:{adminInviteRequestsApprove:!0}},"/admin.inviteRequests.approved.list":{GET:{adminInviteRequestsApprovedList:!0}},"/admin.inviteRequests.denied.list":{GET:{adminInviteRequestsDeniedList:!0}},"/admin.inviteRequests.deny":{POST:{adminInviteRequestsDeny:!0}},"/admin.inviteRequests.list":{GET:{adminInviteRequestsList:!0}},"/admin.teams.admins.list":{GET:{adminTeamsAdminsList:!1}},"/admin.teams.create":{POST:{adminTeamsCreate:!0}},"/admin.teams.list":{GET:{adminTeamsList:!0}},"/admin.teams.owners.list":{GET:{adminTeamsOwnersList:!1}},"/admin.teams.settings.info":{GET:{adminTeamsSettingsInfo:!0}},"/admin.teams.settings.setDefaultChannels":{POST:{adminTeamsSettingsSetDefaultChannels:!1}},"/admin.teams.settings.setDescription":{POST:{adminTeamsSettingsSetDescription:!0}},"/admin.teams.settings.setDiscoverability":{POST:{adminTeamsSettingsSetDiscoverability:!0}},"/admin.teams.settings.setIcon":{POST:{adminTeamsSettingsSetIcon:!1}},"/admin.teams.settings.setName":{POST:{adminTeamsSettingsSetName:!0}},"/admin.usergroups.addChannels":{POST:{adminUsergroupsAddChannels:!0}},"/admin.usergroups.addTeams":{POST:{adminUsergroupsAddTeams:!0}},"/admin.usergroups.listChannels":{GET:{adminUsergroupsListChannels:!0}},"/admin.usergroups.removeChannels":{POST:{adminUsergroupsRemoveChannels:!0}},"/admin.users.assign":{POST:{adminUsersAssign:!0}},"/admin.users.invite":{POST:{adminUsersInvite:!0}},"/admin.users.list":{GET:{adminUsersList:!0}},"/admin.users.remove":{POST:{adminUsersRemove:!0}},"/admin.users.session.invalidate":{POST:{adminUsersSessionInvalidate:!0}},"/admin.users.session.reset":{POST:{adminUsersSessionReset:!0}},"/admin.users.setAdmin":{POST:{adminUsersSetAdmin:!0}},"/admin.users.setExpiration":{POST:{adminUsersSetExpiration:!0}},"/admin.users.setOwner":{POST:{adminUsersSetOwner:!0}},"/admin.users.setRegular":{POST:{adminUsersSetRegular:!0}}});r.define({"/api.test":{GET:{apiTest:!0}}});r.define({"/apps.event.authorizations.list":{GET:{appsEventAuthorizationsList:!0}},"/apps.permissions.info":{GET:{appsPermissionsInfo:!1}},"/apps.permissions.request":{GET:{appsPermissionsRequest:!1}},"/apps.permissions.resources.list":{GET:{appsPermissionsResourcesList:!1}},"/apps.permissions.scopes.list":{GET:{appsPermissionsScopesList:!1}},"/apps.permissions.users.list":{GET:{appsPermissionsUsersList:!1}},"/apps.permissions.users.request":{GET:{appsPermissionsUsersRequest:!1}},"/apps.uninstall":{GET:{appsUninstall:!1}}});r.define({"/auth.revoke":{GET:{authRevoke:!1}},"/auth.test":{GET:{authTest:!0}}});r.define({"/bots.info":{GET:{botsInfo:!1}}});r.define({"/calls.add":{POST:{callsAdd:!0}},"/calls.end":{POST:{callsEnd:!0}},"/calls.info":{GET:{callsInfo:!0}},"/calls.participants.add":{POST:{callsParticipantsAdd:!0}},"/calls.participants.remove":{POST:{callsParticipantsRemove:!0}},"/calls.update":{POST:{callsUpdate:!0}}});r.define({"/chat.delete":{POST:{chatDelete:!0}},"/chat.deleteScheduledMessage":{POST:{chatDeleteScheduledMessage:!0}},"/chat.getPermalink":{GET:{chatGetPermalink:!1}},"/chat.meMessage":{POST:{chatMeMessage:!0}},"/chat.postEphemeral":{POST:{chatPostEphemeral:!0}},"/chat.postMessage":{POST:{chatPostMessage:!0}},"/chat.scheduleMessage":{POST:{chatScheduleMessage:!0}},"/chat.scheduledMessages.list":{GET:{chatScheduledMessagesList:!0}},"/chat.unfurl":{POST:{chatUnfurl:!0}},"/chat.update":{POST:{chatUpdate:!0}}});r.define({"/conversations.archive":{POST:{conversationsArchive:!0}},"/conversations.close":{POST:{conversationsClose:!0}},"/conversations.create":{POST:{conversationsCreate:!0}},"/conversations.history":{GET:{conversationsHistory:!0}},"/conversations.info":{GET:{conversationsInfo:!1}},"/conversations.invite":{POST:{conversationsInvite:!0}},"/conversations.join":{POST:{conversationsJoin:!0}},"/conversations.kick":{POST:{conversationsKick:!0}},"/conversations.leave":{POST:{conversationsLeave:!0}},"/conversations.list":{GET:{conversationsList:!1}},"/conversations.mark":{POST:{conversationsMark:!0}},"/conversations.members":{GET:{conversationsMembers:!1}},"/conversations.open":{POST:{conversationsOpen:!0}},"/conversations.rename":{POST:{conversationsRename:!0}},"/conversations.replies":{GET:{conversationsReplies:!1}},"/conversations.setPurpose":{POST:{conversationsSetPurpose:!0}},"/conversations.setTopic":{POST:{conversationsSetTopic:!0}},"/conversations.unarchive":{POST:{conversationsUnarchive:!0}}});r.define({"/dialog.open":{GET:{dialogOpen:!0}}});r.define({"/dnd.endDnd":{POST:{dndEndDnd:!0}},"/dnd.endSnooze":{POST:{dndEndSnooze:!0}},"/dnd.info":{GET:{dndInfo:!1}},"/dnd.setSnooze":{POST:{dndSetSnooze:!1}},"/dnd.teamInfo":{GET:{dndTeamInfo:!1}}});r.define({"/emoji.list":{GET:{emojiList:!1}}});r.define({"/files.comments.delete":{POST:{filesCommentsDelete:!0}},"/files.delete":{POST:{filesDelete:!0}},"/files.info":{GET:{filesInfo:!1}},"/files.list":{GET:{filesList:!1}},"/files.remote.add":{POST:{filesRemoteAdd:!1}},"/files.remote.info":{GET:{filesRemoteInfo:!1}},"/files.remote.list":{GET:{filesRemoteList:!1}},"/files.remote.remove":{POST:{filesRemoteRemove:!1}},"/files.remote.share":{GET:{filesRemoteShare:!1}},"/files.remote.update":{POST:{filesRemoteUpdate:!1}},"/files.revokePublicURL":{POST:{filesRevokePublicURL:!0}},"/files.sharedPublicURL":{POST:{filesSharedPublicURL:!0}},"/files.upload":{POST:{filesUpload:!1}}});r.define({"/migration.exchange":{GET:{migrationExchange:!1}}});r.define({"/oauth.access":{GET:{oauthAccess:!1}},"/oauth.token":{GET:{oauthToken:!1}},"/oauth.v2.access":{GET:{oauthV2Access:!1}}});r.define({"/pins.add":{POST:{pinsAdd:!0}},"/pins.list":{GET:{pinsList:!1}},"/pins.remove":{POST:{pinsRemove:!0}}});r.define({"/reactions.add":{POST:{reactionsAdd:!0}},"/reactions.get":{GET:{reactionsGet:!1}},"/reactions.list":{GET:{reactionsList:!1}},"/reactions.remove":{POST:{reactionsRemove:!0}}});r.define({"/reminders.add":{POST:{remindersAdd:!0}},"/reminders.complete":{POST:{remindersComplete:!0}},"/reminders.delete":{POST:{remindersDelete:!0}},"/reminders.info":{GET:{remindersInfo:!1}},"/reminders.list":{GET:{remindersList:!1}}});r.define({"/rtm.connect":{GET:{rtmConnect:!1}}});r.define({"/search.messages":{GET:{searchMessages:!1}}});r.define({"/stars.add":{POST:{starsAdd:!0}},"/stars.list":{GET:{starsList:!1}},"/stars.remove":{POST:{starsRemove:!0}}});r.define({"/team.accessLogs":{GET:{teamAccessLogs:!1}},"/team.billableInfo":{GET:{teamBillableInfo:!1}},"/team.info":{GET:{teamInfo:!1}},"/team.integrationLogs":{GET:{teamIntegrationLogs:!1}},"/team.profile.get":{GET:{teamProfileGet:!1}}});r.define({"/usergroups.create":{POST:{usergroupsCreate:!0}},"/usergroups.disable":{POST:{usergroupsDisable:!0}},"/usergroups.enable":{POST:{usergroupsEnable:!0}},"/usergroups.list":{GET:{usergroupsList:!1}},"/usergroups.update":{POST:{usergroupsUpdate:!0}},"/usergroups.users.list":{GET:{usergroupsUsersList:!1}},"/usergroups.users.update":{POST:{usergroupsUsersUpdate:!0}}});r.define({"/users.conversations":{GET:{usersConversations:!1}},"/users.deletePhoto":{POST:{usersDeletePhoto:!1}},"/users.getPresence":{GET:{usersGetPresence:!1}},"/users.identity":{GET:{usersIdentity:!1}},"/users.info":{GET:{usersInfo:!1}},"/users.list":{GET:{usersList:!1}},"/users.lookupByEmail":{GET:{usersLookupByEmail:!1}},"/users.profile.get":{GET:{usersProfileGet:!1}},"/users.profile.set":{POST:{usersProfileSet:!0}},"/users.setActive":{POST:{usersSetActive:!0}},"/users.setPhoto":{POST:{usersSetPhoto:!1}},"/users.setPresence":{POST:{usersSetPresence:!0}}});r.define({"/views.open":{GET:{viewsOpen:!0}},"/views.publish":{GET:{viewsPublish:!0}},"/views.push":{GET:{viewsPush:!0}},"/views.update":{GET:{viewsUpdate:!0}}});r.define({"/workflows.stepCompleted":{GET:{workflowsStepCompleted:!0}},"/workflows.stepFailed":{GET:{workflowsStepFailed:!0}},"/workflows.updateStep":{GET:{workflowsUpdateStep:!0}}});var ye=I});var g={};de(g,{default:()=>Ge});f();var ae=H(N(),1);m(g,H(N(),1));var Ge=ae.SlackBot;export{Ge as default};
