import{Buffer as a}from"https://registry.koishi.chat/modules/buffer/index.js";import f from"https://registry.koishi.chat/modules/process/index.js";import{h as s,isNullable as l,remove as d,Schema as p,Service as y}from"https://registry.koishi.chat/modules/koishi/index.js";import"https://registry.koishi.chat/modules/@cordiverse/path/index.js";var h=Object.defineProperty,c=(e,t)=>h(e,"name",{value:t,configurable:!0}),m=class{constructor(e,t){this.ctx=e,this.options={type:"primary",content:[]},e.notifier.store.push(this),this.update(t),e.notifier.entry?.refresh(),this.dispose=e.collect("entry",()=>{this.clearActions(),d(e.notifier.store,this),e.notifier.entry?.refresh()})}static{c(this,"Notifier")}options;dispose;actionKeys=[];clearActions(){for(let e of this.actionKeys)delete this.ctx.notifier.actions[e];this.actionKeys=[]}update(e){if((typeof e=="string"||s.isElement(e)||Array.isArray(e))&&(e={content:e}),!l(e?.content)){this.clearActions();let t=typeof e.content=="string"?[s("p",e.content)]:s.toElementArray(e.content);e.content=s.transform(t,({type:i,attrs:r})=>{if(i==="button"&&typeof r.onClick=="function"){let n=Math.random().toString(36).slice(2);this.ctx.notifier.actions[n]=r.onClick,this.actionKeys.push(n),r.onClick=n}return!0})}Object.assign(this.options,e),this.ctx.notifier.entry?.refresh()}toJSON(){return{...this.options,content:this.options.content.join(""),paths:this.ctx.get("loader")?.paths(this.ctx.scope)}}},o=class extends y{constructor(e,t){super(e,"notifier",!0),this.config=t,e.inject(["console"],i=>{i.on("dispose",()=>this.entry=void 0),this.entry=i.console.addEntry(["https://registry.koishi.chat/modules/@koishijs/plugin-notifier/dist/index.js","https://registry.koishi.chat/modules/@koishijs/plugin-notifier/dist/style.css"],()=>({notifiers:this.store.map(r=>r.toJSON())})),i.console.addListener("notifier/button",r=>this.actions[r]())})}static{c(this,"NotifierService")}static inject={optional:["notifier"]};store=[];actions=Object.create(null);entry;message(e){typeof e=="string"&&(e={content:e}),e.type||="primary",this.ctx.get("console").broadcast("notifier/message",e)}create(e){return new m(this.ctx,e)}};(e=>{e.Config=p.object({})})(o||(o={}));var A=o;export{m as Notifier,A as default};
