var E=Object.defineProperty;var Q=Object.getOwnPropertyDescriptor;var B=Object.getOwnPropertyNames;var V=Object.prototype.hasOwnProperty;var I=(e,t)=>()=>(e&&(t=e(e=0)),t);var N=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var D=(e,t,i,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of B(t))!V.call(e,r)&&r!==i&&E(e,r,{get:()=>t[r],enumerable:!(a=Q(t,r))||a.enumerable});return e},g=(e,t,i)=>(D(e,t,"default"),i&&D(i,t,"default"));var b=e=>D(E({},"__esModule",{value:!0}),e);import{Buffer as j}from"https://registry.koishi.chat/modules/buffer/index.js";import y from"https://registry.koishi.chat/modules/process/index.js";var h=I(()=>{});var x={};import*as pe from"https://registry.koishi.chat/modules/koishi/index.js";var T=I(()=>{h();g(x,pe)});import W from"https://registry.koishi.chat/modules/@cordiverse/path/index.js";var R=N((ge,$)=>{h();$.exports=W});var _={};import*as fe from"https://registry.koishi.chat/modules/@cordiverse/fs/index.js";var k=I(()=>{h();g(_,fe)});var w={};import*as xe from"https://registry.koishi.chat/modules/@satorijs/element/jsx-runtime/index.js";var q=I(()=>{h();g(w,xe)});var se=N((_e,M)=>{h();var z=Object.create,F=Object.defineProperty,G=Object.getOwnPropertyDescriptor,K=Object.getOwnPropertyNames,L=Object.getPrototypeOf,X=Object.prototype.hasOwnProperty,U=(e,t)=>F(e,"name",{value:t,configurable:!0}),Y=(e,t)=>{for(var i in t)F(e,i,{get:t[i],enumerable:!0})},A=(e,t,i,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of K(t))!X.call(e,r)&&r!==i&&F(e,r,{get:()=>t[r],enumerable:!(a=G(t,r))||a.enumerable});return e},C=(e,t,i)=>(i=e!=null?z(L(e)):{},A(t||!e||!e.__esModule?F(i,"default",{value:e,enumerable:!0}):i,e)),Z=e=>A(F({},"__esModule",{value:!0}),e),J={};Y(J,{Config:()=>ae,apply:()=>H,name:()=>re,usage:()=>ie});M.exports=Z(J);var p=(T(),b(x)),f=C(R()),v=C((k(),b(_))),ee=class{static{U(this,"pixivHandler")}ctx;apiUrl;saveFilePath;constructor(e,t,i){this.ctx=e,this.apiUrl=t,this.saveFilePath=i}async saveId(e,t){if(!e)return"必须要id参数!";let r=e.split(",").filter(n=>n!=null&&n!=null&&n!="").map(n=>n.replace("https://www.pixiv.net/artworks/",""));try{let n=await this.processIds(r,!!t);return n.length>0?`以下作品库存里已经有啦: ${n.join(", ")}`:"全部保存好啦！"}catch(n){return this.ctx.logger.error("无法处理ID",n),"保存失败，请检查日志"}}async getData(e,t){let i=f.default.join(this.saveFilePath+"/result_acc.json"),a=f.default.join(this.saveFilePath+"/result_ver.json"),r=f.default.join(this.saveFilePath+"/result_other.json");try{let n=await v.default.readFileSync(i,"utf8"),l=await v.default.readFileSync(a,"utf8"),o=await v.default.readFileSync(r,"utf8"),c=JSON.parse(n),m=JSON.parse(l),d=JSON.parse(o),u;return e==="1"?u=c:e==="2"?u=m:e==="3"?u=d:u=[...c,...m,...d],t?`总库存: ${c.length+m.length+d.length}, 横屏: ${c.length}, 竖屏: ${m.length}, 其他: ${d.length}`:u}catch(n){return n.code==="ENOENT"?"无法获取文件":(this.ctx.logger.error("读取文件时出错",n),"读取文件时出错")}}async getRes(e){if(!e)return"Missing id parameter";let i=e.split(",").map(a=>a.replace("https://www.pixiv.net/artworks/",""));try{let a=await this.fetchPixivIllust(i[0]);return(await this.getR18Illustrations(a)).length>0?{error:"该作品含有R18内容"}:a}catch(a){return this.ctx.logger.error("Error reading data file:",a),"Internal Server Error"}}async getQuery(e){let t,i;/^(|\s)+\d+(|\s)+$/.test(e)?t=`${e}`:i=`${e}`;let a=[f.default.join(this.saveFilePath+"/result_acc.json"),f.default.join(this.saveFilePath+"/result_ver.json"),f.default.join(this.saveFilePath+"/result_other.json")];try{for(let r of a){let n=await v.default.readFileSync(r,"utf8"),l=JSON.parse(n);if(t){let o=l.find(c=>c.id===t);if(o)return o}if(i){let o=l.filter(c=>c.illust&&c.illust.tags&&c.illust.tags.some(m=>m.name===i||m.translated_name===i));if(o.length>0)return o}}return"没有获取到匹配的项目"}catch(r){return this.ctx.logger.error("Error querying data:",r),"发生未知错误"}}async search(e,t){if(!e)return"缺少参数keyword";try{let a=(await this.ctx.http.get(this.apiUrl+`/api/pixiv/search?word=${e}`)).illusts,r=a.filter(n=>!n.tags.some(l=>/R-?18/i.test(l.name)));return t?a:r}catch(i){this.ctx.logger.error("Error searching data:",i)}}async fetchPixivIllust(e,t){let i=this.apiUrl+`/api/pixiv/illust?id=${e}`;try{let r=await this.ctx.http.get(i);return r.illust.image_urls.medium.includes("s.pximg.net")&&r.illust.image_urls.medium.includes("limit_sanity")?void 0:t?r:(await this.getR18Illustrations(r)).length>0?void 0:r}catch(a){throw this.ctx.logger.error(`无法获取作品 ${e} 的详细信息:`,a),a}}async isIdExist(e,t){try{let i=await v.default.readFileSync(t,"utf8");return JSON.parse(i).some(r=>r.id===e)}catch(i){if(i.code==="ENOENT")return!1;throw this.ctx.logger.error("无法读取文件:",i),i}}async appendDataToFile(e,t){try{let i=[];try{let a=await v.default.readFileSync(t,"utf8");i=JSON.parse(a)}catch(a){if(a.code!=="ENOENT")throw a}i.push(...e),await v.default.writeFileSync(t,JSON.stringify(i,null,2),"utf8"),this.ctx.logger.info("数据已成功追加到文件！")}catch(i){throw this.ctx.logger.error("追加数据到文件时出错:",i),i}}async processIds(e,t){let i={acc:f.default.join(this.saveFilePath+"/result_acc.json"),ver:f.default.join(this.saveFilePath+"/result_ver.json"),other:f.default.join(this.saveFilePath+"/result_other.json")},a=[],r=[];try{for(let n of e){let l=await this.isIdExist(n,i.acc),o=await this.isIdExist(n,i.ver),c=await this.isIdExist(n,i.other);l||o||c?a.push(n):r.push(n)}if(r.length>0){let o=(await Promise.all(r.map(u=>this.fetchPixivIllust(u,!!t)))).filter(u=>u!=null).map((u,P)=>({...u,id:r[P]})),c=[],m=[],d=[];for(let u of o)if(u.illust){let{width:P,height:S}=u.illust;u.illust.tags?P>S*1.3?c.push(u):S>P*1.3?m.push(u):d.push(u):d.push(u)}else d.push(u);await this.appendDataToFile(c,i.acc),await this.appendDataToFile(m,i.ver),await this.appendDataToFile(d,i.other)}return a}catch(n){throw this.ctx.logger.error("无法处理分析函数",n),n}}async getR18Illustrations(e){let t=/R(-)?18/gi,i=U(a=>a.illust.tags.some(r=>t.test(r.name)||r.translated_name&&t.test(r.translated_name)),"containsR18Tag");if(!e)return["数组为空",1,2,3];if(Array.isArray(e))return e.filter(a=>i(a));if(typeof e=="object"&&e!==null)return i(e)?[e]:[];throw new TypeError("Expected data to be an array or an object")}},te=R(),s=(q(),b(w)),re="pidsave",ie=`
## 说明
本插件基于[HibiAPI](https://github.com/mixmoe/HibiAPI)开发，可以查看原站自行部署HibiAPI  
只做了简单的测试，可能会有问题，可以在github上提issue  
***插件处于试验阶段*** 

* 命令
  - pid 13441117, 120970130, https://www.pixiv.net/artworks/120966133
  - pida https://www.pixiv.net/artworks/120966133 或者 pida 120970130
  - pids 萝莉
  - pidrandom 0 (0从横屏、竖屏，其他中随机获取一张图图， 1横屏，2竖屏)
  - pidget 13441117 或 pidget 碧蓝档案
  - pidstore （获取库存数量）
`,ae=p.Schema.object({apiUrl:p.Schema.string().required().role("link").description("自建的HibiAPI地址"),savePath:p.Schema.string().default(".").description("文件存储位置"),imgReserveUrl:p.Schema.string().default("https://i.pixiv.re").description("pixiv图片加速地址")});function H(e,t){let i=new ee(e,t.apiUrl,(0,te.resolve)(import.meta.url,t.savePath));e.command("pid <id:text>","把pixiv作品id存在一个文件里").alias("存图").action(async({session:a},r)=>{if(!r)return(0,s.jsx)(s.Fragment,{children:`用法：pidsave 82693507，82351988
用都改好隔开保存多个作品`});let n=r.replaceAll(/ /gi,"").replaceAll("，",",");try{let l=await i.saveId(n),o=await i.getRes(n),c=o.illust.meta_pages;return(0,s.jsxs)(s.Fragment,{children:[l,`
 图片`,(0,s.jsx)("image",{url:(c[0]?p.Random.pick(c).image_urls.medium:o.illust.image_urls.medium).replace("i.pximg.net",t.imgReserveUrl)}),"为首的作品数据保存完成！"]})}catch{return(0,s.jsx)(s.Fragment,{children:"保存失败！图片无法解析"})}}),e.command("pidanalysis <id:text>","pixiv pid解析(仅支持单个id)").alias("/解析").alias("pida").alias("pid解析").action(async({session:a},r)=>{if(!r)return(0,s.jsx)(s.Fragment,{children:"用法：pid 82693507 仅支持单个id"});let n=r.replaceAll(/ /gi,"").replaceAll("，",",");try{let l=await i.getRes(n);if(l&&l.error)return(0,s.jsx)(s.Fragment,{children:l.error});let o=l.illust.meta_pages;a.send((0,s.jsxs)(s.Fragment,{children:["解析pid##",r,`##成功
 Title: `,l.illust.title,`
 画师: `,l.illust.user.name,"(",l.illust.user.id,")",(0,s.jsx)("image",{url:(o[0]?p.Random.pick(o).image_urls.medium:l.illust.image_urls.medium).replace("i.pximg.net",t.imgReserveUrl)}),"原图Url: ",(o[0]?p.Random.pick(o).image_urls.original:l.illust.meta_single_page.original_image_url).replace("i.pximg.net",t.imgReserveUrl),`
 10s内输入save或保存可以存图`]}));let c=await a.prompt(1e4),m;if(c&&c.match(/(save|保存)/gi))try{let d=await i.saveId(n);return(0,s.jsxs)(s.Fragment,{children:[`存图成功！
`,d]})}catch{return(0,s.jsx)(s.Fragment,{children:"存图失败了"})}else return(0,s.jsx)(s.Fragment,{children:"放弃保存,还想存再图库里可以使用存图命令"})}catch{return(0,s.jsx)(s.Fragment,{children:"无法解析pid"})}}),e.command("pidrandom <mode:number>","库存内的图片随机取一张,0为竖屏1为横屏").alias("随机取图").action(async({session:a},r)=>{if(r<0||r>2)return(0,s.jsx)(s.Fragment,{children:`用法：pidrandom 0
0为所有随机1为横屏2为竖屏`});r||(r=0);try{let n=await i.getData(r,!1),l=p.Random.pick(n),o=l.illust.meta_pages;return(0,s.jsxs)(s.Fragment,{children:[`随机取得一张图图
 Title: `,l.illust.title,`
 PID: `,l.illust.id,`
 画师: `,l.illust.user.name,"(",l.illust.user.id,")",(0,s.jsx)("image",{url:(o[0]?p.Random.pick(o).image_urls.medium:l.illust.image_urls.medium).replace("i.pximg.net",t.imgReserveUrl)}),"原图Url: ",(o[0]?p.Random.pick(o).image_urls.original:l.illust.meta_single_page.original_image_url).replace("i.pximg.net",t.imgReserveUrl)]})}catch{return(0,s.jsx)(s.Fragment,{children:"md，又出问题！跟你你爆了!!"})}}),e.command("pidget <keyword>","根据id或tag找图（仅限一个id和tag）").alias("取图").action(async({session:a},r)=>{if(!r)return(0,s.jsx)(s.Fragment,{children:"请输入关键词"});try{let n=await i.getQuery(r),l=/^(|\s)+\d+(|\s)+$/.test(r)?n:p.Random.pick(n),o=l.illust.meta_pages;return(0,s.jsxs)(s.Fragment,{children:["根据",/^(|\s)+\d+(|\s)+$/.test(r)?"id":"tag","##",r,`##随机获取了一张图图
 Title: `,l.illust.title,`
 PID: `,l.illust.id,`
 画师: `,l.illust.user.name,"(",l.illust.user.id,`)
`,(0,s.jsx)("image",{url:(o[0]?p.Random.pick(o).image_urls.medium:l.illust.image_urls.medium).replace("i.pximg.net",t.imgReserveUrl)}),"原图Url: ",(o[0]?p.Random.pick(o).image_urls.original:l.illust.meta_single_page.original_image_url).replace("i.pximg.net",t.imgReserveUrl)]})}catch{return(0,s.jsx)(s.Fragment,{children:"妹游找到相符的图图……"})}}),e.command("pidstore","查看图库库存情况").alias("库存查询").action(async({session:a})=>{try{return await i.getData(0,!0)}catch{return(0,s.jsx)(s.Fragment,{children:"md，又出问题！跟你爆了!!"})}}),e.command("原站搜索","pixiv原站搜索").alias("搜图").alias("pids").option("page","-p <page:number> 分页").option("forward","-f 合并转发").action(async({session:a,options:r},n)=>{if(!n)return(0,s.jsx)(s.Fragment,{children:"请输入关键词"});let l=await i.search(n);try{let o=await e.http.get(l),c=r.page?r.page:0;return r.forward?(0,s.jsx)("message",{forward:!0,children:(0,s.jsxs)("message",{children:[(0,s.jsx)("author",{id:a.selfId,name:"贝拉bot",avatar:`https://q1.qlogo.cn/g?b=qq&nk=${a.selfId}&s=640`}),O(o.slice(c*10,(c+1)*10),10,t)]})}):(0,s.jsxs)(s.Fragment,{children:["搜索结果(最多显示4条)",O(o.slice(c*4,c*4+3),6,t)]})}catch{return(0,s.jsx)(s.Fragment,{children:"呜哇！不可以再搜啦！"})}})}U(H,"apply");function O(e,t,i){return e?e.map((a,r)=>r<t?(0,s.jsxs)("div",{children:[r>=0?(0,s.jsx)(s.Fragment,{children:`
  `}):"",r+1,"  ID: ",a.id,`
`,(0,s.jsx)("img",{src:a.meta_pages[0]?a.meta_pages[0].image_urls.medium.replace("https://i.pximg.net",i.imgReserveUrl):a.image_urls.medium.replace("https://i.pximg.net",i.imgReserveUrl),alt:"thumbnail"}),`
 标题: `,a.title,`
 作者: `,a.user.name," (",a.user.id,`) 
 Tags: `,a.tags.map(n=>n.translated_name?n.translated_name:n.name).join(", "),`
 作品地址: `,"https://www.pixiv.net/artworks/"+a.id]}):null):(0,s.jsx)(s.Fragment,{children:"妹游在原站找到对应的图图"})}U(O,"parseIllusts")});export default se();
